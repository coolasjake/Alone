<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_H_stone_2</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>obj_H_Wall_Parent</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Initialize variables
max_strength = 90000
strength = max_strength
prev_strength = strength
check = 1
source = 0
surface = 4
Exists1 = 0
Exists2 = 0
Exists3 = 0
Exists4 = 0
Exists5 = 0
Exists6 = 0


ID_up_left = collision_point(x-37,y,obj_Wall_Parent,0,1) //Hex 1
ID_up = collision_point(x+18,y-32,obj_Wall_Parent,0,1) //Hex 2
ID_up_right = collision_point(x+74,y,obj_Wall_Parent,0,1) //Hex 3

ID_down_right = collision_point(x+74,y+64,obj_Wall_Parent,0,1) //Hex 4
ID_down = collision_point(x+18,y+96,obj_Wall_Parent,0,1) //Hex 5
ID_down_left = collision_point(x-37,y+64,obj_Wall_Parent,0,1) //Hex 6


if instance_exists(ID_up_left) {Exists1 = 1}
if instance_exists(ID_up) {Exists2 = 1}
if instance_exists(ID_up_right) {Exists3 = 1}
if instance_exists(ID_down_right) {Exists4 = 1}
if instance_exists(ID_down) {Exists5 = 1}
if instance_exists(ID_down_left) {Exists6 = 1}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw block + damage.
if surface = 0 {draw_self()}
else
{
col = make_color_hsv(0, 0, ((4-surface)/4)*255)
draw_sprite_ext(sprite_index,0,x,y,1,1,0,col,1)
}

if strength != max_strength or check = 1
{
check = 0

Exists1 = 0
Exists2 = 0
Exists3 = 0
Exists4 = 0
Exists5 = 0
Exists6 = 0


ID_up_left = collision_point(x-37,y,obj_Wall_Parent,0,1) //Hex 1
ID_up = collision_point(x+18,y-32,obj_Wall_Parent,0,1) //Hex 2
ID_up_right = collision_point(x+74,y,obj_Wall_Parent,0,1) //Hex 3

ID_down_right = collision_point(x+74,y+64,obj_Wall_Parent,0,1) //Hex 4
ID_down = collision_point(x+18,y+96,obj_Wall_Parent,0,1) //Hex 5
ID_down_left = collision_point(x-37,y+64,obj_Wall_Parent,0,1) //Hex 6


if instance_exists(ID_up_left) {Exists1 = 1}
if instance_exists(ID_up) {Exists2 = 1}
if instance_exists(ID_up_right) {Exists3 = 1}
if instance_exists(ID_down_right) {Exists4 = 1}
if instance_exists(ID_down) {Exists5 = 1}
if instance_exists(ID_down_left) {Exists6 = 1}
}

if Exists1 = 0 or Exists2 = 0 or Exists3 = 0 or Exists4 = 0 or Exists5 = 0 or Exists6 = 0 {surface = 0}
else if ID_up_left.surface = 0 or ID_up.surface = 0 or ID_up_right.surface = 0 or ID_down_right.surface = 0 or ID_down.surface = 0 or ID_down_left.surface = 0 {surface = 1}
else if ID_up_left.surface = 1 or ID_up.surface = 1 or ID_up_right.surface = 1 or ID_down_right.surface = 1 or ID_down.surface = 1 or ID_down_left.surface = 1 {surface = 2}
else if ID_up_left.surface = 2 or ID_up.surface = 2 or ID_up_right.surface = 2 or ID_down_right.surface = 2 or ID_down.surface = 2 or ID_down_left.surface = 2 {surface = 3}
else {surface = 4}

if strength != max_strength
{
if prev_strength = strength and strength &lt; max_strength {strength += 5}
else if source = 1
{
if Exists1 = 1 {ID_up_left.strength -= (prev_strength - strength)/2}
if Exists2 = 1 {ID_up.strength -= (prev_strength - strength)/2}
if Exists3 = 1 {ID_up_right.strength -= (prev_strength - strength)/2}
if Exists4 = 1 {ID_down_right.strength -= (prev_strength - strength)/2}
if Exists5 = 1 {ID_down.strength -= (prev_strength - strength)/2}
if Exists6 = 1 {ID_down_left.strength -= (prev_strength - strength)/2}
}
colour = make_color_rgb(255,47,17)
draw_sprite_ext(sprite_index,0,x,y,1,1,0,colour,(max_strength-strength)/max_strength)

draw_set_colour(c_white)
prev_strength = strength
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>0,0</point>
    <point>16,16</point>
  </PhysicsShapePoints>
</object>
