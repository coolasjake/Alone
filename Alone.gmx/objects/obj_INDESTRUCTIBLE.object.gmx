<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_Wall_1</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>obj_Wall_Parent</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Initialize variables
max_strength = 90000
strength = max_strength
prev_strength = strength
Exists1 = 0
Exists2 = 0
Exists3 = 0
Exists4 = 0
check = 0
source = 0
surface = 3
ID_up = collision_point(x+32,y-32,obj_Wall_Parent,0,1)
ID_down = collision_point(x+32,y+96,obj_Wall_Parent,0,1)
ID_left = collision_point(x-32,y+32,obj_Wall_Parent,0,1)
ID_right = collision_point(x+96,y+32,obj_Wall_Parent,0,1)

if instance_exists(ID_up) {Exists1 = 1}
if instance_exists(ID_down) {Exists2 = 1}
if instance_exists(ID_left) {Exists3 = 1}
if instance_exists(ID_right) {Exists4 = 1}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_self()

draw_set_colour(c_black)
draw_set_alpha((surface)/4)
draw_rectangle(x,y,x+63,y+63,0)

if strength != max_strength
{
Exists1 = 0
Exists2 = 0
Exists3 = 0
Exists4 = 0
ID_up = collision_point(x+32,y-32,obj_Wall_Parent,0,1)
ID_down = collision_point(x+32,y+96,obj_Wall_Parent,0,1)
ID_left = collision_point(x-32,y+32,obj_Wall_Parent,0,1)
ID_right = collision_point(x+96,y+32,obj_Wall_Parent,0,1)

if instance_exists(ID_up) {Exists1 = 1}
if instance_exists(ID_down) {Exists2 = 1}
if instance_exists(ID_left) {Exists3 = 1}
if instance_exists(ID_right) {Exists4 = 1}
}

if strength != max_strength
{
if prev_strength = strength and strength &lt; max_strength {strength += 1}
else if source = 1
{
if Exists1 = 1 {ID_up.strength -= (prev_strength - strength)/2}
if Exists2 = 1 {ID_down.strength -= (prev_strength - strength)/2}
if Exists3 = 1 {ID_left.strength -= (prev_strength - strength)/2}
if Exists4 = 1 {ID_right.strength -= (prev_strength - strength)/2}
}
if strength &lt;= 0
{
strength = 0
}
colour = make_color_rgb(255,47,17)
draw_set_colour(colour)
draw_set_alpha((max_strength-strength)/max_strength)
draw_rectangle(x,y,x+63,y+63,0)
draw_set_colour(c_white)
prev_strength = strength
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>0,0</point>
    <point>16,16</point>
  </PhysicsShapePoints>
</object>
